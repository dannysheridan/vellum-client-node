/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const WorkflowResultEvent: core.serialization.ObjectSchema<
    serializers.WorkflowResultEvent.Raw,
    Vellum.WorkflowResultEvent
> = core.serialization.object({
    id: core.serialization.string(),
    state: core.serialization.lazy(async () => (await import("..")).WorkflowResultEventStateEnum),
    ts: core.serialization.string(),
    error: core.serialization.string().optional(),
});

export declare namespace WorkflowResultEvent {
    interface Raw {
        id: string;
        state: serializers.WorkflowResultEventStateEnum.Raw;
        ts: string;
        error?: string | null;
    }
}
