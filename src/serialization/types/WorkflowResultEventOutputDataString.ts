/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const WorkflowResultEventOutputDataString: core.serialization.ObjectSchema<
    serializers.WorkflowResultEventOutputDataString.Raw,
    Vellum.WorkflowResultEventOutputDataString
> = core.serialization.object({
    name: core.serialization.string(),
    state: core.serialization.lazy(async () => (await import("..")).WorkflowNodeResultEventState),
    nodeId: core.serialization.property("node_id", core.serialization.string()),
    value: core.serialization.string().optional(),
});

export declare namespace WorkflowResultEventOutputDataString {
    interface Raw {
        name: string;
        state: serializers.WorkflowNodeResultEventState.Raw;
        node_id: string;
        value?: string | null;
    }
}
