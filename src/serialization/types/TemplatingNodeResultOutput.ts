/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const TemplatingNodeResultOutput: core.serialization.Schema<
    serializers.TemplatingNodeResultOutput.Raw,
    Vellum.TemplatingNodeResultOutput
> = core.serialization
    .union("type", {
        STRING: core.serialization.lazyObject(async () => (await import("..")).TemplatingNodeStringResult),
        NUMBER: core.serialization.lazyObject(async () => (await import("..")).TemplatingNodeNumberResult),
        JSON: core.serialization.lazyObject(async () => (await import("..")).TemplatingNodeJsonResult),
        CHAT_HISTORY: core.serialization.lazyObject(async () => (await import("..")).TemplatingNodeChatHistoryResult),
        SEARCH_RESULTS: core.serialization.lazyObject(
            async () => (await import("..")).TemplatingNodeSearchResultsResult
        ),
        ERROR: core.serialization.lazyObject(async () => (await import("..")).TemplatingNodeErrorResult),
    })
    .transform<Vellum.TemplatingNodeResultOutput>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TemplatingNodeResultOutput {
    type Raw =
        | TemplatingNodeResultOutput.String
        | TemplatingNodeResultOutput.Number
        | TemplatingNodeResultOutput.Json
        | TemplatingNodeResultOutput.ChatHistory
        | TemplatingNodeResultOutput.SearchResults
        | TemplatingNodeResultOutput.Error;

    interface String extends serializers.TemplatingNodeStringResult.Raw {
        type: "STRING";
    }

    interface Number extends serializers.TemplatingNodeNumberResult.Raw {
        type: "NUMBER";
    }

    interface Json extends serializers.TemplatingNodeJsonResult.Raw {
        type: "JSON";
    }

    interface ChatHistory extends serializers.TemplatingNodeChatHistoryResult.Raw {
        type: "CHAT_HISTORY";
    }

    interface SearchResults extends serializers.TemplatingNodeSearchResultsResult.Raw {
        type: "SEARCH_RESULTS";
    }

    interface Error extends serializers.TemplatingNodeErrorResult.Raw {
        type: "ERROR";
    }
}
