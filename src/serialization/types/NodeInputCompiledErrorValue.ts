/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const NodeInputCompiledErrorValue: core.serialization.ObjectSchema<
    serializers.NodeInputCompiledErrorValue.Raw,
    Vellum.NodeInputCompiledErrorValue
> = core.serialization.object({
    nodeInputId: core.serialization.property("node_input_id", core.serialization.string()),
    key: core.serialization.string(),
    value: core.serialization.lazyObject(async () => (await import("..")).VellumError).optional(),
});

export declare namespace NodeInputCompiledErrorValue {
    interface Raw {
        node_input_id: string;
        key: string;
        value?: serializers.VellumError.Raw | null;
    }
}
