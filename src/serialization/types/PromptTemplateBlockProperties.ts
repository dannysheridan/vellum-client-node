/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import { Vellum } from "vellum-ai";
import * as core from "../../core";

export const PromptTemplateBlockProperties: core.serialization.ObjectSchema<
    serializers.PromptTemplateBlockProperties.Raw,
    Vellum.PromptTemplateBlockProperties
> = core.serialization.object({
    chatRole: core.serialization.property(
        "chat_role",
        core.serialization.lazy(async () => (await import("..")).ChatRoleEnum).optional()
    ),
    text: core.serialization.string().optional(),
    variableName: core.serialization.property("variable_name", core.serialization.string().optional()),
    blocks: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
});

export declare namespace PromptTemplateBlockProperties {
    interface Raw {
        chat_role?: serializers.ChatRoleEnum.Raw | null;
        text?: string | null;
        variable_name?: string | null;
        blocks?: Record<string, unknown>[] | null;
    }
}
