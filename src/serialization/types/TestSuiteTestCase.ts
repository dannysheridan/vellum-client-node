/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const TestSuiteTestCase: core.serialization.ObjectSchema<
    serializers.TestSuiteTestCase.Raw,
    Vellum.TestSuiteTestCase
> = core.serialization.object({
    id: core.serialization.string().optional(),
    label: core.serialization.string().optional(),
    inputValues: core.serialization.property(
        "input_values",
        core.serialization.list(core.serialization.lazy(async () => (await import("..")).TestCaseVariableValue))
    ),
    evaluationValues: core.serialization.property(
        "evaluation_values",
        core.serialization.list(core.serialization.lazy(async () => (await import("..")).TestCaseVariableValue))
    ),
});

export declare namespace TestSuiteTestCase {
    interface Raw {
        id?: string | null;
        label?: string | null;
        input_values: serializers.TestCaseVariableValue.Raw[];
        evaluation_values: serializers.TestCaseVariableValue.Raw[];
    }
}
