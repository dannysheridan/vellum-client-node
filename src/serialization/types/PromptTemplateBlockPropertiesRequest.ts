/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const PromptTemplateBlockPropertiesRequest: core.serialization.ObjectSchema<
    serializers.PromptTemplateBlockPropertiesRequest.Raw,
    Vellum.PromptTemplateBlockPropertiesRequest
> = core.serialization.object({
    chatRole: core.serialization.property(
        "chat_role",
        core.serialization.lazy(async () => (await import("..")).ChatMessageRole).optional()
    ),
    chatMessageUnterminated: core.serialization.property(
        "chat_message_unterminated",
        core.serialization.boolean().optional()
    ),
    template: core.serialization.string().optional(),
    blocks: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
});

export declare namespace PromptTemplateBlockPropertiesRequest {
    interface Raw {
        chat_role?: serializers.ChatMessageRole.Raw | null;
        chat_message_unterminated?: boolean | null;
        template?: string | null;
        blocks?: Record<string, unknown>[] | null;
    }
}
