/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Vellum from "../../../../../api";
import * as core from "../../../../../core";

export const TestSuiteTestCaseRequest: core.serialization.Schema<
    serializers.TestSuiteTestCaseRequest.Raw,
    Vellum.TestSuiteTestCaseRequest
> = core.serialization.object({
    testCaseId: core.serialization.property("test_case_id", core.serialization.string().optional()),
    label: core.serialization.string().optional(),
    inputValues: core.serialization.property(
        "input_values",
        core.serialization.record(core.serialization.string(), core.serialization.unknown())
    ),
    evaluationParams: core.serialization.property(
        "evaluation_params",
        core.serialization.lazyObject(async () => (await import("../../../..")).EvaluationParamsRequest)
    ),
});

export declare namespace TestSuiteTestCaseRequest {
    interface Raw {
        test_case_id?: string | null;
        label?: string | null;
        input_values: Record<string, unknown>;
        evaluation_params: serializers.EvaluationParamsRequest.Raw;
    }
}
